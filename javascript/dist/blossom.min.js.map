{"version":3,"sources":["blossom.js"],"names":["canvas","document","getElementById","context","getContext","resizeCanvas","hero","parentElement","width","offsetWidth","height","offsetHeight","petalImage","Image","src","Petal","window","addEventListener","Math","random","size","this","speedX","speedY","rotation","rotationSpeed","x","y","save","translate","rotate","PI","scale","flutter","drawImage","restore","onload","petals","i","push","animate","cos","forEach","petal","draw","onerror","console","error"],"mappings":"mZAAA,IAAMA,OAASC,SAASC,eAAe,iBACjCC,QAAUH,OAAOI,WAAW,MAGlC,SAASC,eACL,IAAMC,EAAON,OAAOO,cACpBP,OAAOQ,MAAQF,EAAKG,YACpBT,OAAOU,OAASJ,EAAKK,aAGzBN,eAJIL,OAAAA,iBAAoBS,SAFAJ,cAIvB,IAAAO,WAAA,IAAAC,MASDD,WAAWE,IAAM,gCAEXC,iBANNC,SAAAA,IAAOC,gBAAAA,KAAAA,GAGDL,KAAAA,EAAaM,KAAIL,UAAvB,GAAAb,OAAAQ,OAAA,GAAAR,OAAAQ,MACAI,KAAWE,EAAMI,KAAAC,UAAjB,GAAiBnB,OAAAU,QAEXK,KAMOK,KAAuB,GAAhBF,KAAKC,SAAgB,GAEjCE,KAAKC,SAAWJ,KAAKC,SAAW,IAPpCE,KAAAE,OAAcL,KAAAC,SAAA,GAUVE,KAAKG,SAA2B,IAAhBN,KAAKC,SATrBE,KAAAI,cAAA,GAAAP,KAAAC,SAAA,0DAeAE,KAAKK,GAAKL,KAAKC,OAXfD,KAAAM,GAAYT,KAAKC,OAcjBE,KAAKG,UAAYH,KAAKI,eAXjBF,KAALI,EAAcT,OAAKC,QARTE,KAQ0BK,EAAAL,KAAAD,KAAA,KACpCC,KAAAK,EAAAR,KAAAC,UAAA,GAAAnB,OAAAQ,OAAA,GAAAR,OAAAQ,MAeIa,KAAKM,EAAIT,KAAKC,UAA4B,GAAhBnB,OAAOU,sCAIpCP,GAEDA,EAAQyB,OAfRzB,EAAA0B,UAAAR,KAAAK,EAAAL,KAAAM,GAEAxB,EAAU2B,OAAKP,KAHVC,SAILN,KAAAa,GAAA,KACA,IAAKP,EAAYN,KAAKO,IAAAA,KAAAA,SAEtBP,KAAAa,GAAA,IAgBA5B,EAAQ6B,MAAMC,EAAS,GAdnB9B,EAAA+B,UAAcf,YAAYnB,KAAOQ,KAAQ,GAAhCa,KAAuCrB,KAAOQ,EAAPa,KAAhDD,KAAAC,KAAAD,MACAjB,EAAAgC,mBAoBZvB,WAAWwB,OAAS,WAZZjC,IAHA,IAAAkC,EAAA,GAGOC,EAACT,EAAAA,EAAU,GAAAS,IAkBlBD,EAAOE,KAAK,IAAIxB,QAGpB,SAASyB,IAjBLrC,QAAM8B,UAAeQ,EAAI,EAAAzC,OAAKwB,MAAWN,OAAhBR,QAmBzB2B,EAAOK,QAAQ,SAAAC,GAlBfxC,EAAQ6B,SACRW,EAAAC,KAAAzC,WACAA,sBAAkBS,GAuBtB4B,IAGJ5B,WAAWiC,QAAU,WACnBC,QAAQC,MAAM","file":"blossom.min.js","sourcesContent":["const canvas = document.getElementById('petal-blossom');\r\nconst context = canvas.getContext('2d');\r\n\r\n//Make the area available for the petals to be the whole image area\r\nfunction resizeCanvas() {\r\n    const hero = canvas.parentElement;\r\n    canvas.width = hero.offsetWidth;  //width of hero img\r\n    canvas.height = hero.offsetHeight;  //height of hero img\r\n}\r\n\r\nresizeCanvas();\r\n\r\n//Resize the area available on viewport resize\r\nwindow.addEventListener('resize', resizeCanvas);\r\n\r\n// Load image\r\nconst petalImage = new Image();\r\npetalImage.src = 'javascript/img/petal4.png';\r\n\r\nclass Petal {\r\n    constructor() {\r\n        //Starting position in the top right quandrant \r\n        this.x = Math.random() * (canvas.width * 0.5) + canvas.width * 0.5;  //50% to 100% width\r\n        this.y = Math.random() * (canvas.height * 0.5);  //0 to 50% height\r\n        //Petal size\r\n        this.size = Math.random() * 35 + 25;  //size in pixels\r\n        //Fall speed\r\n        this.speedX = -(Math.random() + 0.5);  //negative for moving left\r\n        this.speedY = Math.random() + 0.5;  //positive for moving down\r\n        //Rotation of petal while falling\r\n        this.rotation = Math.random() * 360;\r\n        this.rotationSpeed = (Math.random() - 0.5) * 2;\r\n    }\r\n\r\n    update() {\r\n        //Updating the petal positions based on its speed\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n        //Updating the petal rotation angle based on its rotation speed\r\n        this.rotation += this.rotationSpeed;\r\n\r\n        //Resets and gives a new start position for petals fallen out of frame \r\n        if (this.y > canvas.height || this.x + this.size < 0) {\r\n            this.x = Math.random() * (canvas.width * 0.5) + canvas.width * 0.5; \r\n            this.y = Math.random() * (canvas.height * 0.5); \r\n        }\r\n    }\r\n\r\n    draw(context) {\r\n        //Save and Restore to ensure each petal can rotate and move independantly\r\n        context.save();\r\n        //Starting points\r\n        context.translate(this.x, this.y);\r\n        //Rotate petals\r\n        context.rotate(this.rotation * Math.PI / 180); //change to degrees rather than radians\r\n        // 3D-like rotation\r\n        const flutter = Math.cos(this.rotation * Math.PI / 90);  //last number alters the speed of 'flip', the lower the number the higher the speed\r\n        context.scale(flutter, 1); // Horizontal flip and squish/stretch\r\n        //\r\n        context.drawImage(petalImage, -this.size / 2, -this.size / 2, this.size, this.size);\r\n        context.restore();\r\n    }\r\n}\r\n\r\npetalImage.onload = () => {\r\n    //Empty array for the petals\r\n    const petals = [];\r\n\r\n    //Creating a certain number of petals (30 in my case)\r\n    for (let i = 0; i < 30; i++) {\r\n        petals.push(new Petal());\r\n    }\r\n\r\n    function animate() {\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        petals.forEach(petal => {\r\n            petal.update();\r\n            petal.draw(context);\r\n        });\r\n        requestAnimationFrame(animate);\r\n    }\r\n\r\n    animate();  // only start after image loads\r\n}\r\n\r\npetalImage.onerror = () => {\r\n  console.error('Failed to load petal image. - blossom.js:87');\r\n};\r\n"]}