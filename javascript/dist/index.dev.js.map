{"version":3,"sources":["index.js"],"names":["form","document","getElementById","addEventListener","event","preventDefault","target","requiredFields","isValid","errorDisplay","querySelectorAll","control","classList","remove","fieldName","input","elements","value","trim","setError","placeholder","replace","setSuccess","emailRegex","test","alert","message","inputControl","parentElement","querySelector","innerText","add"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AAEAF,IAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,UAACC,KAAD,EAAW;AACvCA,EAAAA,KAAK,CAACC,cAAN;AAEA,MAAML,IAAI,GAAGI,KAAK,CAACE,MAAnB;AACA,MAAMC,cAAc,GAAG,CACnB,WADmB,EAEnB,UAFmB,EAGnB,OAHmB,EAInB,SAJmB,EAKnB,SALmB,CAAvB;AAQA,MAAIC,OAAO,GAAG,IAAd,CAZuC,CAcvC;;AACA,MAAMC,YAAY,GAAGT,IAAI,CAACU,gBAAL,CAAsB,sBAAtB,CAArB;AAfuC;AAAA;AAAA;;AAAA;AAgBvC,yBAAsBD,YAAtB,8HAAoC;AAAA,UAAzBE,OAAyB;AAChCA,MAAAA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyB,OAAzB;AACH,KAlBsC,CAoBvC;;AApBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBvC,qCAAsBN,cAAtB,qCAAsC;AAAjC,QAAIO,SAAS,sBAAb;AACD,QAAMC,KAAK,GAAGf,IAAI,CAACgB,QAAL,CAAcF,SAAd,CAAd;AACA,QAAMG,KAAK,GAAGF,KAAK,CAACE,KAAN,CAAYC,IAAZ,EAAd;;AAEA,QAAID,KAAK,KAAK,EAAd,EAAkB;AACdE,MAAAA,QAAQ,CAACJ,KAAD,YAAWA,KAAK,CAACK,WAAN,CAAkBC,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,CAAX,mBAAR;AACAb,MAAAA,OAAO,GAAG,KAAV;AACH,KAHD,MAGO;AACHc,MAAAA,UAAU,CAACP,KAAD,CAAV;AACH;;AAED,QAAID,SAAS,KAAK,OAAlB,EAA2B;AAC3B,UAAMS,UAAU,GAAG,4BAAnB;;AACA,UAAI,CAACA,UAAU,CAACC,IAAX,CAAgBP,KAAhB,CAAL,EAA6B;AACzBE,QAAAA,QAAQ,CAACJ,KAAD,EAAQ,4BAAR,CAAR;AACAP,QAAAA,OAAO,GAAG,KAAV;AACC;AACJ;AACJ,GAvCsC,CAyCvC;;;AACA,MAAIA,OAAJ,EAAa;AACTiB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CADS,CAET;AACH;AAEJ,CA/CD,E,CAkDA;;AACA,SAASN,QAAT,CAAkBJ,KAAlB,EAAyBW,OAAzB,EAAkC;AAC9B,MAAMC,YAAY,GAAGZ,KAAK,CAACa,aAA3B;AACA,MAAMnB,YAAY,GAAGkB,YAAY,CAACE,aAAb,CAA2B,QAA3B,CAArB;AAEApB,EAAAA,YAAY,CAACqB,SAAb,GAAyBJ,OAAzB;AACAC,EAAAA,YAAY,CAACf,SAAb,CAAuBC,MAAvB,CAA8B,SAA9B;AACAc,EAAAA,YAAY,CAACf,SAAb,CAAuBmB,GAAvB,CAA2B,OAA3B;AACH;;AAED,SAAST,UAAT,CAAoBP,KAApB,EAA2B;AACvB,MAAMY,YAAY,GAAGZ,KAAK,CAACa,aAA3B;AACA,MAAMnB,YAAY,GAAGkB,YAAY,CAACE,aAAb,CAA2B,QAA3B,CAArB;AAEApB,EAAAA,YAAY,CAACqB,SAAb,GAAyB,EAAzB;AACAH,EAAAA,YAAY,CAACf,SAAb,CAAuBC,MAAvB,CAA8B,OAA9B;AACAc,EAAAA,YAAY,CAACf,SAAb,CAAuBmB,GAAvB,CAA2B,SAA3B;AACH","sourcesContent":["const form = document.getElementById('form');\r\n\r\nform.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    \r\n    const form = event.target;\r\n    const requiredFields = [\r\n        'firstname',\r\n        'lastname',\r\n        'email',\r\n        'subject',\r\n        'message'\r\n    ]\r\n\r\n    let isValid = true;\r\n\r\n    // Clear error statements from before\r\n    const errorDisplay = form.querySelectorAll('.input-control.error');\r\n    for (const control of errorDisplay) {\r\n        control.classList.remove('error');\r\n    }\r\n      \r\n    // Validation for each field in the array\r\n    for (let fieldName of requiredFields) {\r\n        const input = form.elements[fieldName];\r\n        const value = input.value.trim();\r\n\r\n        if (value === '') {\r\n            setError(input, `${input.placeholder.replace(/\\*$/, '')} is required.`);\r\n            isValid = false;\r\n        } else {\r\n            setSuccess(input);\r\n        }\r\n\r\n        if (fieldName === 'email') {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(value)) {\r\n            setError(input, 'Please enter a valid email');\r\n            isValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Alert message when everything is correct\r\n    if (isValid) {\r\n        alert('Form submitted successfully!');\r\n        // will add form.submit() here when needed \r\n    }\r\n\r\n});\r\n\r\n\r\n// Functions for the error and success messages\r\nfunction setError(input, message) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = message;\r\n    inputControl.classList.remove('success');\r\n    inputControl.classList.add('error');\r\n}\r\n\r\nfunction setSuccess(input) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = '';\r\n    inputControl.classList.remove('error');\r\n    inputControl.classList.add('success');\r\n}"],"file":"index.dev.js"}