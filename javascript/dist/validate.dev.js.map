{"version":3,"sources":["validate.js"],"names":["form","document","getElementById","addEventListener","event","preventDefault","target","requiredFields","isValid","errorDisplay","querySelectorAll","control","classList","remove","fieldName","input","elements","value","trim","setError","placeholder","replace","setSuccess","emailRegex","test","telephoneInput","telephoneValue","telephoneRegex","inputControl","parentElement","querySelector","innerText","alert","reset","inputControls","message","add"],"mappings":"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","sourcesContent":["const form = document.getElementById('form');\r\n\r\nform.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    \r\n    const form = event.target;\r\n    const requiredFields = [\r\n        'firstname',\r\n        'lastname',\r\n        'email',\r\n        'subject',\r\n        'message',\r\n    ]\r\n    let isValid = true;\r\n\r\n    // Clear error statements from before\r\n    const errorDisplay = form.querySelectorAll('.input-control.error');\r\n    for (const control of errorDisplay) {\r\n        control.classList.remove('error');\r\n    }\r\n      \r\n    // Validation for each field in the array\r\n    for (let fieldName of requiredFields) {\r\n        const input = form.elements[fieldName];\r\n        const value = input.value.trim();\r\n\r\n        if (value === '') {\r\n            setError(input, `${input.placeholder.replace(/\\*$/, '')} is required.`);\r\n            isValid = false;\r\n        } else {\r\n            setSuccess(input);\r\n        }\r\n\r\n        if (fieldName === 'email') {\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (value !== '' && !emailRegex.test(value)) {\r\n                setError(input, 'Please enter a valid email');\r\n                isValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Separate validation for the phone number as its not a required field\r\n    const telephoneInput = document.getElementById('telephone');\r\n    const telephoneValue = telephoneInput.value.trim();\r\n    const telephoneRegex = /^\\d{11}$/;\r\n    if (telephoneValue === '') {\r\n        // If field is cleared, remove both error and success classes\r\n        const inputControl = telephoneInput.parentElement;\r\n        const errorDisplay = inputControl.querySelector('.error');\r\n        \r\n        errorDisplay.innerText = '';\r\n        inputControl.classList.remove('error', 'success');\r\n    } else if (!telephoneRegex.test(telephoneValue)) {\r\n        setError(telephoneInput, 'Please enter a valid phone number');\r\n        isValid = false;\r\n    } else {\r\n        setSuccess(telephoneInput);\r\n    }\r\n\r\n    // Alert message when everything is correct\r\n    if (isValid) {\r\n        alert('Form submitted successfully!');\r\n        // will add form.submit() here when needed \r\n\r\n        // Reset the form fields\r\n        form.reset();\r\n\r\n        // Remove success classes\r\n        const inputControls = form.querySelectorAll('.input-control');\r\n        for (const control of inputControls) {\r\n            control.classList.remove('success');\r\n        }\r\n    }\r\n\r\n});\r\n\r\n// Functions for the error and success messages\r\nfunction setError(input, message) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = message;\r\n    inputControl.classList.remove('success');\r\n    inputControl.classList.add('error');\r\n}\r\n\r\nfunction setSuccess(input) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = '';\r\n    inputControl.classList.remove('error');\r\n    inputControl.classList.add('success');\r\n}"],"file":"validate.dev.js"}