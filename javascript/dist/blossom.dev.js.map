{"version":3,"sources":["blossom.js"],"names":["canvas","document","getElementById","context","getContext","resizeCanvas","hero","parentElement","width","offsetWidth","height","offsetHeight","window","addEventListener","petalImage","Image","src","Petal","x","Math","random","y","size","speedX","speedY","rotation","rotationSpeed","save","translate","rotate","PI","flutter","cos","scale","drawImage","restore","onload","petals","i","push","animate","clearRect","petal","update","draw","requestAnimationFrame","onerror","console","error"],"mappings":"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","sourcesContent":["const canvas = document.getElementById('petal-blossom');\r\nconst context = canvas.getContext('2d');\r\n\r\n//Make the area available for the petals to be the whole image area\r\nfunction resizeCanvas() {\r\n    const hero = canvas.parentElement;\r\n    canvas.width = hero.offsetWidth;  //width of hero img\r\n    canvas.height = hero.offsetHeight;  //height of hero img\r\n}\r\n\r\nresizeCanvas();\r\n\r\n//Resize the area available on viewport resize\r\nwindow.addEventListener('resize', resizeCanvas);\r\n\r\n// Load image\r\nconst petalImage = new Image();\r\npetalImage.src = 'javascript/img/petal4.png';\r\n\r\nclass Petal {\r\n    constructor() {\r\n        //Starting position in the top right quandrant \r\n        this.x = Math.random() * (canvas.width * 0.5) + canvas.width * 0.5;  //50% to 100% width\r\n        this.y = Math.random() * (canvas.height * 0.5);  //0 to 50% height\r\n        //Petal size\r\n        this.size = Math.random() * 35 + 25;  //size in pixels\r\n        //Fall speed\r\n        this.speedX = -(Math.random() + 0.5);  //negative for moving left\r\n        this.speedY = Math.random() + 0.5;  //positive for moving down\r\n        //Rotation of petal while falling\r\n        this.rotation = Math.random() * 360;\r\n        this.rotationSpeed = (Math.random() - 0.5) * 2;\r\n    }\r\n\r\n    update() {\r\n        //Updating the petal positions based on its speed\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n        //Updating the petal rotation angle based on its rotation speed\r\n        this.rotation += this.rotationSpeed;\r\n\r\n        //Resets and gives a new start position for petals fallen out of frame \r\n        if (this.y > canvas.height || this.x + this.size < 0) {\r\n            this.x = Math.random() * (canvas.width * 0.5) + canvas.width * 0.5; \r\n            this.y = Math.random() * (canvas.height * 0.5); \r\n        }\r\n    }\r\n\r\n    draw(context) {\r\n        //Save and Restore to ensure each petal can rotate and move independantly\r\n        context.save();\r\n        //Starting points\r\n        context.translate(this.x, this.y);\r\n        //Rotate petals\r\n        context.rotate(this.rotation * Math.PI / 180); //change to degrees rather than radians\r\n        // 3D-like rotation\r\n        const flutter = Math.cos(this.rotation * Math.PI / 90);  //last number alters the speed of 'flip', the lower the number the higher the speed\r\n        context.scale(flutter, 1); // Horizontal flip and squish/stretch\r\n        //Draw the petal\r\n        context.drawImage(petalImage, -this.size / 2, -this.size / 2, this.size, this.size);\r\n        context.restore();\r\n    }\r\n}\r\n\r\n//When the image is loaded\r\npetalImage.onload = () => {\r\n    //Empty array for the petals\r\n    const petals = [];\r\n\r\n    //Creating a certain number of petals (30 in my case)\r\n    for (let i = 0; i < 30; i++) {\r\n        petals.push(new Petal());\r\n    }\r\n\r\n    function animate() {\r\n        //Make sure they don't leave any trails behind\r\n        context.clearRect(0, 0, canvas.width, canvas.height);  //Each frame is drawn fresh, allowing objects like petals to move smoothly without leaving marks behind\r\n        for (let petal of petals) {\r\n            petal.update();\r\n            petal.draw(context);\r\n        };\r\n        requestAnimationFrame(animate); //Ensures smooth animation\r\n    }\r\n\r\n    animate();  // only start after image loads\r\n}\r\n\r\n//Error check to mkae sure the image loads\r\npetalImage.onerror = () => {\r\n  console.error('Failed to load petal image. - blossom.js:90');\r\n};"],"file":"blossom.dev.js"}