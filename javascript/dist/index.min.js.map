{"version":3,"sources":["index.js"],"names":["form","document","getElementById","setError","input","message","inputControl","parentElement","querySelector","innerText","classList","remove","alert","add","setSuccess","event","addEventListener","target","isValid","control","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","errorDisplay","Symbol","iterator","next","done","value","err","_i","_requiredFields","length","fieldName","elements","trim","concat","placeholder","replace","test"],"mappings":"aAAA,IAAMA,KAAOC,SAASC,eAAe,QAuCxB,SAAAC,SAAAC,EAAAC,GACJ,IAAAC,EAAAF,EAAAG,cAGLD,EAAAE,cAAA,UAcaC,UAAYJ,EAbzBC,EAAaI,UAAAC,OAAA,WACTC,EAAMF,UAAAG,IAAA,SAiBd,SAASC,WAAWV,GATpB,IAASD,EAAgBE,EAAAA,cACAD,EAAMG,cAA3B,UAGaE,UAAYJ,GACzBC,EAAaI,UAAUC,OAAO,SAC9BL,EAAaI,UAAUG,IAAI,WA3D/Bb,KAAMA,iBAAgBE,SAAAA,SAAAA,GAElBa,EAACC,iBAGD,IAAUhB,EAAGe,EAAME,OAHoBC,GAAA,EAiBnCC,EAAkBR,EAAlBS,iBAAA,wBAnBRC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAoBK,IAAA,IAAAC,EAAAC,EAEDC,EAFCC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAED,CAAAI,EAAAO,MAHYtB,UAAUC,OAAO,UAnBjC,MAAAsB,GAAAX,GAAA,EAAAC,EAAAU,EAAA,QAAA,IAAAZ,GAAA,MAAAK,EAAA,QAAAA,EAAA,SAAA,QAAA,GAAAJ,EAAA,MAAAC,GAE2C,IAAA,IAAAW,EAAA,EAAAC,EAKnC,CAOAjB,YANA,WASES,QAfiC,UAAA,WAAAO,EAAAC,EAAAC,OAAAF,IAAA,CAAA,IAAAG,EAAAF,EAAAD,GAAA9B,EAAAJ,EAAAsC,SAAAD,GAAAL,EAAA5B,EAAA4B,MAAAO,OAgCnC,GAhCmC,KAAAP,GAAA7B,SAAAC,EAAA,GAAAoC,OAAApC,EAAAqC,YAAAC,QAAA,MAAA,IAAA,kBAAAxB,GAAA,GAAAJ,WAAAV,GAgCjB,UAAdiC,EAAuB,CAX/B,6BAAkBM,KAAAX,KACR5B,SAAakC,EAAAA,8BACbN,GAAcA,IAMhBlB,GACHF,MAAA","file":"index.min.js","sourcesContent":["const form = document.getElementById('form');\r\n\r\nform.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    \r\n    const form = event.target;\r\n    const requiredFields = [\r\n        'firstname',\r\n        'lastname',\r\n        'email',\r\n        'subject',\r\n        'message'\r\n    ]\r\n\r\n    let isValid = true;\r\n\r\n    // Clear error statements from before\r\n    const errorDisplay = form.querySelectorAll('.input-control.error');\r\n    for (const control of errorDisplay) {\r\n        control.classList.remove('error');\r\n    }\r\n      \r\n    // Validation for each field in the array\r\n    for (let fieldName of requiredFields) {\r\n        const input = form.elements[fieldName];\r\n        const value = input.value.trim();\r\n\r\n        if (value === '') {\r\n            setError(input, `${input.placeholder.replace(/\\*$/, '')} is required.`);\r\n            isValid = false;\r\n        } else {\r\n            setSuccess(input);\r\n        }\r\n\r\n        if (fieldName === 'email') {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(value)) {\r\n            setError(input, 'Please enter a valid email');\r\n            isValid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Alert message when everything is correct\r\n    if (isValid) {\r\n        alert('Form submitted successfully!');\r\n        // will add form.submit() here when needed \r\n    }\r\n\r\n});\r\n\r\n\r\n// Functions for the error and success messages\r\nfunction setError(input, message) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = message;\r\n    inputControl.classList.remove('success');\r\n    inputControl.classList.add('error');\r\n}\r\n\r\nfunction setSuccess(input) {\r\n    const inputControl = input.parentElement;\r\n    const errorDisplay = inputControl.querySelector('.error');\r\n\r\n    errorDisplay.innerText = '';\r\n    inputControl.classList.remove('error');\r\n    inputControl.classList.add('success');\r\n}"]}